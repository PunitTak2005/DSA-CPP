#include <iostream>
using namespace std;

struct Node {
    int data;
    Node* next;
};

void insertAtEnd(Node* &head, int data) {
    Node* newNode = new Node{data, nullptr};
    if (!head) {
        head = newNode;
        return;
    }
    Node* temp = head;
    while (temp->next) {
        temp = temp->next;
    }
    temp->next = newNode;
}

void insertAtPosition(Node* &head, int data, int pos) {
    Node* newNode = new Node{data, nullptr};
    if (pos == 1) {
        newNode->next = head;
        head = newNode;
        return;
    }
    Node* temp = head;
    for (int i = 1; temp && i < pos - 1; i++) {
        temp = temp->next;
    }
    if (temp) {
        newNode->next = temp->next;
        temp->next = newNode;
    }
}

void deleteFromPosition(Node* &head, int pos) {
    if (!head) return;
    Node* temp = head;
    if (pos == 1) {
        head = temp->next;
        delete temp;
        return;
    }
    for (int i = 1; temp && i < pos - 1; i++) {
        temp = temp->next;
    }
    if (temp && temp->next) {
        Node* nodeToDelete = temp->next;
        temp->next = temp->next->next;
        delete nodeToDelete;
    }
}

void displayList(Node* head) {
    while (head) {
        cout << head->data << " -> ";
        head = head->next;
    }
    cout << "NULL" << endl;
}

int main() {
    Node* head = nullptr;
    insertAtEnd(head, 10);
    insertAtEnd(head, 20);
    insertAtEnd(head, 30);

    insertAtPosition(head, 15, 2);
    displayList(head);

    deleteFromPosition(head, 3);
    displayList(head);

    return 0;
}
