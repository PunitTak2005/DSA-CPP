#include <iostream>
using namespace std;

struct Term {
    int coeff;
    int exp;
    Term* next;
};

class Polynomial {
    Term* head;

public:
    Polynomial() : head(nullptr) {}

    void addTerm(int coeff, int exp) {
        Term* newTerm = new Term{coeff, exp, nullptr};
        if (!head || head->exp < exp) {
            newTerm->next = head;
            head = newTerm;
        } else {
            Term* temp = head;
            while (temp->next && temp->next->exp >= exp) {
                temp = temp->next;
            }
            if (temp->exp == exp) {
                temp->coeff += coeff;
            } else {
                newTerm->next = temp->next;
                temp->next = newTerm;
            }
        }
    }

    static Polynomial addPolynomials(Polynomial& p1, Polynomial& p2) {
        Polynomial result;
        Term* t1 = p1.head;
        Term* t2 = p2.head;

        while (t1 && t2) {
            if (t1->exp == t2->exp) {
                result.addTerm(t1->coeff + t2->coeff, t1->exp);
                t1 = t1->next;
                t2 = t2->next;
            } else if (t1->exp > t2->exp) {
                result.addTerm(t1->coeff, t1->exp);
                t1 = t1->next;
            } else {
                result.addTerm(t2->coeff, t2->exp);
                t2 = t2->next;
            }
        }

        while (t1) {
            result.addTerm(t1->coeff, t1->exp);
            t1 = t1->next;
        }

        while (t2) {
            result.addTerm(t2->coeff, t2->exp);
            t2 = t2->next;
        }

        return result;
    }

    void display() {
        Term* temp = head;
        while (temp) {
            cout << temp->coeff << "x^" << temp->exp;
            if (temp->next) cout << " + ";
            temp = temp->next;
        }
        cout << endl;
    }
};

int main() {
    Polynomial p1, p2;

    // Polynomial 1: 3x^2 + 5x^1
    p1.addTerm(3, 2);
    p1.addTerm(5, 1);

    // Polynomial 2: 4x^2 + 2x^1
    p2.addTerm(4, 2);
    p2.addTerm(2, 1);

    cout << "Polynomial 1: ";
    p1.display();
    cout << "Polynomial 2: ";
    p2.display();

    Polynomial sum = Polynomial::addPolynomials(p1, p2);
    cout << "Sum of Polynomials: ";
    sum.display();

    return 0;
}
